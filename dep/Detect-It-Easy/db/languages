// Author: DosX
// E-Mail: collab@kay-software.ru
// GitHub: https://github.com/DosX-dev
// Telegram: @DosX_dev

function handleLanguage() {
    if (!Binary.isVerbose()) return null;

    const db = [{
            "name": "C/C++",
            "detectedAs": [
                "Microsoft Visual C/C++", "Borland C++", "LCC-Win32", "Watcom C/C++", "gcc", "WinGW"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Delphi",
            "detectedAs": [
                "Borland Delphi", "Embarcadero Delphi"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "ASM Language",
            "detectedAs": [
                "FASM", "MASM", "MASM32"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Visual Basic",
            "detectedAs": [
                "Microsoft Visual Basic"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Java",
            "detectedAs": [
                "JVM"
            ],
            "detectionType": "virtual machine"
        },
        {
            "name": "JavaScript (ECMA)",
            "detectedAs": [
                "JScript"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "JavaScript (ECMA)", // #2
            "detectedAs": [
                "JavaScript Compiled/Bytenode (.JSC)"
            ],
            "detectionType": "format"
        },
        {
            "name": "Visual Basic .NET",
            "detectedAs": [
                "VB.NET"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "D",
            "detectedAs": [
                "DMD", "ldc", "gdc"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Pascal",
            "detectedAs": [
                "Free Pascal"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Basic",
            "detectedAs": [
                "PureBasic"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Rust",
            "detectedAs": [
                "rust"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Nim",
            "detectedAs": [
                "nim"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "Go",
            "detectedAs": [
                "go"
            ],
            "detectionType": "compiler"
        },
        {
            "name": "MSIL or C#",
            "detectedAs": [
                ".NET"
            ],
            "detectionType": "library"
        },
        {
            "name": "Python", // üêì
            "detectedAs": [
                "Python"
            ],
            "detectionType": "library"
        },
        {
            "name": "Python", // üêì
            "detectedAs": [
                "PyInstaller"
            ],
            "detectionType": "packer"
        }
    ];

    for (var i = 0; i < db.length; i++) {
        const currentElement = db[i],
            languageName = currentElement.name,
            detectedAs = currentElement.detectedAs,
            detectionType = currentElement.detectionType;

        for (var x = 0; x < detectedAs.length; x++) {
            const compilerName = detectedAs[x];

            if (_isResultPresent(detectionType, compilerName)) {
                _setResult("language", languageName, "", "");
            }
        }
    }
}